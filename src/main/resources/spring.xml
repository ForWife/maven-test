<?xml version="1.0" encoding="UTF-8"?>
 <beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.3.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd"> 
		
		
<!-- <beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache" 
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
     http://www.springframework.org/schema/cache 
     http://www.springframework.org/schema/cache/spring-cache-4.0.xsd"> -->
		
	
	<context:component-scan base-package="com.neu"></context:component-scan>
	
	<!-- 配置数据源 -->
	<!-- dbcp2 是一个数据库连接池  c3p0-->
	 <bean id="ds" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/webpro"/>
		<property name="username" value="root" />
		<property name="password" value="123456" />
	</bean> 
	
	<!-- 配置session工厂 -->
	<!-- 类在mybatis-spring 里 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<!-- 加载mybatis的主配置文件 -->
	<property name="configLocation" value="classpath:SqlMapConfig.xml"/>
	<!-- 注入数据源 -->
	<property name="dataSource" ref="ds" />
	</bean>
	
	<!-- 配置service    -->
	<!-- 在上面扫了  所以，这就不不需要了-->
<!-- <context:component-scan base-package="com.neu.service">
</context:component-scan>  -->
	
	<!-- 扫描mapper -->



<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<!-- 指定扫描的包名
	如果扫描多个包，每个包中间使用半角逗号分隔
	-->
	<property name="basePackage" value="com.neu.mapper"/>
	<!-- 自动创建session（connection）去数据库交互 -->
	<property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
</bean>	

<!-- 声明事务管理器 -->
<bean id="txm" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="ds"></property>
</bean>

<!-- 配置事务通知 -->
<tx:advice id="txAdvice" transaction-manager="txm">
	<!-- 配置事务的传播特性 -->
	<tx:attributes>
	<tx:method name="save*" propagation="REQUIRED"/>
	<tx:method name="update*" propagation="REQUIRED"/>
	<tx:method name="delete*" propagation="REQUIRED"/>
	<tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
	</tx:attributes>
	</tx:advice>
<!--
配置事务传播特性
REQUIRED 支持当前事务，如果当前没有事务，就新建一个事务。这是最常见的选择。常用于DML语句的操作
SUPPORTS 支持当前事务，如果当前没有事务，就以非事务方式执行。 常用于DQL语句的操作

MANDATORY 支持当前事务，如果当前没有事务，就抛出异常。
REQUIRES_NEW 新建事务，如果当前存在事务，把当前事务挂起。
NOT_SUPPORTED 以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。
NEVER 以非事务方式执行，如果当前存在事务，则抛出异常。
NESTED 如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则进行与REQUIRED类似的操作。
-->
<!--
持久层，业务层的方法命名遵循规范
规定: 以save insert update delete为起始名的方法，执行事务 强制执行事务
以find select get validate为起始名的方法，不执行事务 不强制执行事务
规范大于规则：不准起其他的名字
-->
	
	<!-- 通过aop切面来控制事务 -->
	<!-- 织入点语法 -->
	<aop:config>
	<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.neu.service.impl.*.*(..))"/>
	</aop:config>
	
	
	
</beans>